{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Pib\\\\Backup\\\\Arquivo pessoal\\\\TI\\\\Minha Programa\\xE7\\xE3o\\\\INGLES\\\\linguagem\\\\javascript\\\\Meu vue\\\\freecodecamp\\\\games30_flappybird_reactnative\\\\flappy_bird\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Bird from \"./components/Bird.js\";\nimport Obstaculos from \"./components/Obstaculos\";\nexport default function App() {\n  var larguraTela = Dimensions.get('screen').width;\n  var alturaTela = Dimensions.get('screen').height;\n  var esquerdoDoPassaro = larguraTela / 2;\n\n  var _useState = useState(alturaTela / 2),\n      _useState2 = _slicedToArray(_useState, 2),\n      fundoDoPassaro = _useState2[0],\n      setFundoDoPassaro = _useState2[1];\n\n  var _useState3 = useState(larguraTela),\n      _useState4 = _slicedToArray(_useState3, 2),\n      esquerdoDoObstaculo = _useState4[0],\n      setEsquerdoDoObstaculo = _useState4[1];\n\n  var _useState5 = useState(larguraTela * 1.5),\n      _useState6 = _slicedToArray(_useState5, 2),\n      esquerdoDoObstaculo2 = _useState6[0],\n      setEsquerdoDoObstaculo2 = _useState6[1];\n\n  var esquerdoDoObstaculoTimerId;\n  var esquerdoDoObstaculoTimerId2;\n  var larguraObstaculo = 60;\n  var alturaObstaculo = 300;\n  var intervalo = 200;\n  var gravidade = 3;\n  var gameTimerId;\n  useEffect(function () {\n    if (fundoDoPassaro > 0) {\n      gameTimerId = setInterval(function () {\n        setFundoDoPassaro(function (fundoDoPassaro) {\n          return fundoDoPassaro - gravidade;\n        });\n      }, 200);\n      return function () {\n        clearInterval(gameTimerId);\n      };\n    }\n  }, [fundoDoPassaro]);\n  useEffect(function () {\n    if (esquerdoDoObstaculo > -larguraObstaculo) {\n      esquerdoDoObstaculoTimerId = setInterval(function () {\n        setEsquerdoDoObstaculo(function (esquerdoDoObstaculo) {\n          return esquerdoDoObstaculo - 5;\n        });\n      }, 30);\n      return function () {\n        clearInterval(esquerdoDoObstaculoTimerId);\n      };\n    } else {\n      setEsquerdoDoObstaculo(larguraTela);\n    }\n  }, [esquerdoDoObstaculo]);\n  useEffect(function () {\n    if (esquerdoDoObstaculo2 > -larguraObstaculo) {\n      esquerdoDoObstaculoTimerId2 = setInterval(function () {\n        setEsquerdoDoObstaculo2(function (esquerdoDoObstaculo2) {\n          return esquerdoDoObstaculo2 - 5;\n        });\n      }, 30);\n      return function () {\n        clearInterval(esquerdoDoObstaculoTimerId2);\n      };\n    } else {\n      setEsquerdoDoObstaculo2(larguraTela);\n    }\n  }, [esquerdoDoObstaculo2]);\n  return React.createElement(View, {\n    style: estilos.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, React.createElement(Bird, {\n    fundoDoPassaro: fundoDoPassaro,\n    esquerdoDoPassaro: esquerdoDoPassaro,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), React.createElement(Obstaculos, {\n    cor: 'green',\n    esquerdoDoObstaculo: esquerdoDoObstaculo,\n    larguraObstaculo: larguraObstaculo,\n    alturaObstaculo: alturaObstaculo,\n    intervalo: intervalo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), React.createElement(Obstaculos, {\n    cor: 'purple',\n    esquerdoDoObstaculo: esquerdoDoObstaculo2,\n    larguraObstaculo: larguraObstaculo,\n    alturaObstaculo: alturaObstaculo,\n    intervalo: intervalo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }));\n}\nvar estilos = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'white'\n  }\n});","map":{"version":3,"sources":["C:/Pib/Backup/Arquivo pessoal/TI/Minha Programação/INGLES/linguagem/javascript/Meu vue/freecodecamp/games30_flappybird_reactnative/flappy_bird/App.js"],"names":["React","useState","useEffect","Bird","Obstaculos","App","larguraTela","Dimensions","get","width","alturaTela","height","esquerdoDoPassaro","fundoDoPassaro","setFundoDoPassaro","esquerdoDoObstaculo","setEsquerdoDoObstaculo","esquerdoDoObstaculo2","setEsquerdoDoObstaculo2","esquerdoDoObstaculoTimerId","esquerdoDoObstaculoTimerId2","larguraObstaculo","alturaObstaculo","intervalo","gravidade","gameTimerId","setInterval","clearInterval","estilos","container","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { StyleSheet, Text, View, Dimensions } from 'react-native'\nimport Bird from './components/Bird.js'\nimport Obstaculos from './components/Obstaculos'\n\n\nexport default function App() {\n    const larguraTela = Dimensions.get('screen').width\n    const alturaTela = Dimensions.get('screen').height\n    //console.log(larguraTela, alturaTela)\n\n    const esquerdoDoPassaro = larguraTela / 2\n    const [fundoDoPassaro, setFundoDoPassaro] = useState(alturaTela/2)\n    const [esquerdoDoObstaculo, setEsquerdoDoObstaculo] = useState(larguraTela)\n    const [esquerdoDoObstaculo2, setEsquerdoDoObstaculo2] = useState(larguraTela * 1.5)\n    let esquerdoDoObstaculoTimerId\n    let esquerdoDoObstaculoTimerId2\n    const larguraObstaculo = 60\n    const alturaObstaculo = 300\n    const intervalo = 200\n    const gravidade = 3\n    let gameTimerId\n    \n    //iniciar pássaro caindo\n    useEffect(() => {\n      if (fundoDoPassaro > 0) {\n        gameTimerId = setInterval(() => {\n          setFundoDoPassaro(fundoDoPassaro => fundoDoPassaro - gravidade)\n        }, 200)\n\n        return () => {\n           clearInterval(gameTimerId)\n        }\n      }\n    }, [fundoDoPassaro])\n    \n    //console.log(fundoDoPassaro)\n\n    // iniciar primeiros obstaculos\n    useEffect(() => {\n      if (esquerdoDoObstaculo > - larguraObstaculo) {\n          esquerdoDoObstaculoTimerId = setInterval(() => {\n              setEsquerdoDoObstaculo(esquerdoDoObstaculo => esquerdoDoObstaculo - 5)\n          }, 30)\n\n          return () => { clearInterval(esquerdoDoObstaculoTimerId) }\n      }\n      else {\n          setEsquerdoDoObstaculo(larguraTela)\n      }\n\n    }, [esquerdoDoObstaculo])\n    \n    // iniciar segundos obstaculos\n    useEffect(() => {\n      if (esquerdoDoObstaculo2 > - larguraObstaculo) {\n          esquerdoDoObstaculoTimerId2 = setInterval(() => {\n              setEsquerdoDoObstaculo2(esquerdoDoObstaculo2 => esquerdoDoObstaculo2 - 5)\n          }, 30)\n\n          return () => { clearInterval(esquerdoDoObstaculoTimerId2) }\n      }\n      else {\n          setEsquerdoDoObstaculo2(larguraTela)\n      }\n\n    }, [esquerdoDoObstaculo2])\n\n\n\n    return (\n        <View style={estilos.container}>\n            <Bird fundoDoPassaro={fundoDoPassaro} esquerdoDoPassaro={esquerdoDoPassaro} />\n            <Obstaculos cor={'green'} esquerdoDoObstaculo={esquerdoDoObstaculo} larguraObstaculo={larguraObstaculo} \n                    alturaObstaculo={alturaObstaculo} intervalo={intervalo} />\n            <Obstaculos cor={'purple'} esquerdoDoObstaculo={esquerdoDoObstaculo2} larguraObstaculo={larguraObstaculo} \n                    alturaObstaculo={alturaObstaculo} intervalo={intervalo} />\n        </View>\n    )\n\n}\n\nconst estilos = StyleSheet.create({\n      container: {\n          flex: 1,\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: 'white',\n      },\n})\n"]},"metadata":{},"sourceType":"module"}